{"version":3,"sources":["components/Person.js","components/Filter.js","components/Form.js","services/people.js","components/Notification.js","App.js","index.js"],"names":["DeleteButton","onClick","Person","person","onDelete","name","number","Filter","value","onChange","PersonForm","onSubmit","nameValue","onNameChange","numValue","onNumChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","isWarning","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","persons","setPersons","notificationMessage","setNotificationMessage","warningMessage","setWarningMessage","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","useEffect","peopleService","initial","showNotification","msg","numSeconds","setTimeout","replacePerson","changedPerson","returnedPerson","map","p","catch","error","filter","peopleToShow","toLowerCase","includes","event","target","Form","preventDefault","window","confirm","find","concat","key","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5720e50a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DeleteButton = ({ onClick }) => {\n  return <button onClick={onClick}>delete</button>;\n};\n\nconst Person = ({ person, onDelete }) => (\n  <li>\n    {person.name} {person.number} {<DeleteButton onClick={onDelete} />}\n  </li>\n);\n\nexport default Person;\n","import React from \"react\";\n\nconst Filter = ({ value, onChange }) => (\n  <div>\n    filter by name: <input value={value} onChange={onChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\nconst PersonForm = ({\n  onSubmit,\n  nameValue,\n  onNameChange,\n  numValue,\n  onNumChange,\n}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={nameValue} onChange={onNameChange} />\n    </div>\n    <div>\n      number: <input value={numValue} onChange={onNumChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject).then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  deletePerson,\n  update,\n};\n","import React from \"react\";\nconst Notification = ({ message, isWarning }) => {\n  if (message == null) {\n    return null;\n  }\n\n  let notificationStyle = {\n    color: \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  if (isWarning) {\n    notificationStyle = { ...notificationStyle, color: \"red\" };\n  }\n\n  return <div style={notificationStyle}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport peopleService from \"./services/people\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [warningMessage, setWarningMessage] = useState(null);\n\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n\n  // When rendering for the first time, resolve promise from server and set state of phonebook\n  useEffect(() => {\n    peopleService.getAll().then((initial) => {\n      setPersons(initial);\n    });\n  }, []);\n\n  // Show a notification at the top of the screen for numSeconds\n  const showNotification = (msg, numSeconds) => {\n    setNotificationMessage(msg);\n    setTimeout(() => {\n      setNotificationMessage(null);\n    }, numSeconds);\n  };\n\n  const showWarning = (msg, numSeconds) => {\n    setWarningMessage(msg);\n    setTimeout(() => {\n      setWarningMessage(null);\n    }, numSeconds);\n  };\n\n  const replacePerson = (person, changedPerson) => {\n    peopleService\n      .update(person.id, changedPerson)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((p) => (p.id !== person.id ? p : returnedPerson))\n        );\n        showNotification(\n          `Successfully changed phone number for ${newName}.`,\n          5000\n        );\n      })\n      .catch((error) => {\n        showWarning(\n          `The entry for ${person.name} was already deleted from the server.`,\n          5000\n        );\n        setPersons(persons.filter((p) => p.id !== person.id));\n      });\n  };\n\n  // Event handler for clicking submit\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    // If duplicate name, offer to change phone number\n    if (persons.map((person) => person.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} already exists in the phonebook; replace the old number?`\n        )\n      ) {\n        // Replace phone number\n        const person = persons.find((p) => p.name === newName);\n        const changedPerson = { ...person, number: newNumber };\n        replacePerson(person, changedPerson);\n      }\n    }\n\n    // otherwise, create new person as normal\n    else {\n      // Create new person\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      // Add person to phonebook\n      peopleService.create(personObject).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n      });\n      showNotification(`${newName} was added to the phonebook.`, 5000);\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deletePerson = (person) => {\n    if (!window.confirm(`Delete ${person.name}?`)) {\n      return;\n    }\n    peopleService.deletePerson(person.id).then((response) => {\n      setPersons(persons.filter((p) => p.id !== person.id));\n    });\n  };\n\n  // Updates everytime the user types a character\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilterChange = (event) => setNewFilter(event.target.value);\n\n  // Only show people with names that include the current filter\n  const peopleToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage} isWarning={false} />\n      <Notification message={warningMessage} isWarning={true} />\n      <Filter value={newFilter} onChange={handleFilterChange}></Filter>\n\n      <h2>Add a New Entry</h2>\n      <Form\n        onSubmit={addPerson}\n        nameValue={newName}\n        onNameChange={handleNameChange}\n        numValue={newNumber}\n        onNumChange={handleNumberChange}\n      ></Form>\n\n      <h2>Numbers</h2>\n      <ul>\n        {peopleToShow.map((person) => (\n          <Person\n            key={person.name}\n            person={person}\n            onDelete={() => deletePerson(person)}\n          ></Person>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}